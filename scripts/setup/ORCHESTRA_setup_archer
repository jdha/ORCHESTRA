#!/bin/bash
# Lightweight script to set up ICECAV on ARCHER
 
display_usage() { 
   echo
   echo "  Auto-Config: ORCHESTRA on ARCHER"
   echo "  ***************************************"
   echo
   echo "  usage: ${0##*/} -w path_to_install_nemo -x path_to_intall_xios -s path_to_repo"
   echo
   echo "  flags:  -w full path to where nemo will be installed"
   echo "          -x full path to where xios will be installed"
   echo "          -s full path to where ORCHESTRA repository resides"
   echo
   exit 1
	} 
# if less than three arguments supplied, display usage 
	if [  $# -le 5 ] 
	then 
		display_usage
		exit 1
	fi 
# if less than two arguments supplied, display usage 
	if [  $# -ge 7 ] 
	then 
		display_usage
		exit 1
	fi 
# check whether user had supplied -h or --help . If yes display usage 
	if [[ ( $# == "--help") ||  $# == "-h" ]] 
	then 
		display_usage
		exit 0
	fi 

while getopts w:x:s: option
  do
  case "${option}"
  in
  w) export WORK_DIR=${OPTARG};;
  x) export XIOS_DIR=${OPTARG};;
  s) export REPO_DIR=${OPTARG};;
  esac
done

if [ ${WORK_DIR:0:1} != "/" ]; then
  echo "WORK_DIR must use full path"
  exit 1
fi

if [ ${XIOS_DIR:0:1} != "/" ]; then
  echo "XIOS_DIR must use full path"
  exit 1
fi

if [ ${REPO_DIR:0:1} != "/" ]; then
  echo "REPO_DIR must use full path"
  exit 1
fi

# Change to some working directory of choice
if [ ! -d "$WORK_DIR" ]; then
  mkdir $WORK_DIR
fi
cd $WORK_DIR

echo "Making sure that the correct modules are loaded"

module swap PrgEnv-cray PrgEnv-intel
module load cray-hdf5-parallel
module load cray-netcdf-hdf5parallel

# Checkout the NEMO code from the SVN Paris repository 
echo "Can't check out NEMO repository as it no longer exist. Building from saved files."
mkdir nemo
mkdir nemo/ARCH

# Define the location of where the ICECAV forcing files are to be downloaded 
export DOWNLOAD_DIR="$WORK_DIR/CONFIG/CORE2NYF-ORCH0083-LIM3/INPUTS/"

echo $XIOS_DIR
# Choose an appropriate directory for your XIOS installation
if [ ! -d "$XIOS_DIR" ]; then
  mkdir $XIOS_DIR
fi
cd $XIOS_DIR
echo $PWD
echo "Checking out xios repository"
svn co http://forge.ipsl.jussieu.fr/ioserver/svn/XIOS/trunk@819 xios
cd xios
cp $REPO_DIR/ARCH/xios/* ./arch
echo "Compiling xios"
./make_xios --full --prod --arch archer --netcdf_lib netcdf4_par --job 4

# Let's update the path to xios
export XIOS_DIR=$XIOS_DIR/xios

cd $WORK_DIR/nemo
cp -r $REPO_DIR/CONFIG .
ln -s $REPO_DIR/NEMO NEMO
cp $REPO_DIR/ARCH/nemo/* ./ARCH
# Dirty fix to hard wire path otherwise user will have to set XIOS_DIR in every new shell session
sed "s?XXX_XIOS_DIR_XXX?$XIOS_DIR?" ./ARCH/arch-archer.fcm > tmp_arch
mv tmp_arch ./ARCH/arch-archer.fcm

echo "Gathering forcing data"

export CONFIG_DIR=$WORK_DIR/nemo/CONFIG/CORE2NYF-ORCH0083-LIM3

# Set up EXP00 

cd $CONFIG_DIR/EXP_SZT
ln -s ../../SHARED/namelist_ref namelist_ref
ln -s ../../SHARED/namelist_ice_lim3_ref namelist_ice_lim3_ref
ln -s ../../SHARED/namelist_top_ref namelist_top_ref
ln -s ../../SHARED/namelist_pisces_ref namelist_pisces_ref
ln -s ../../SHARED/field_def_nemo-opa.xml field_def_nemo-opa.xml
ln -s ../../SHARED/field_def_nemo-pisces.xml field_def_nemo-pisces.xml
ln -s ../../SHARED/field_def_nemo-lim.xml field_def_nemo-lim.xml
ln -s ../../SHARED/domain_def_nemo.xml domain_def_nemo.xml
ln -s ../INPUTS INPUTS
ln -s ../FORCING FORCING
ln -s $XIOS_DIR/bin/xios_server.exe xios_server.exe
mkdir meta_out
mkdir RESTARTS
mkdir OUTPUTS

cd $CONFIG_DIR/EXP_ZPS
ln -s ../../SHARED/namelist_ref namelist_ref
ln -s ../../SHARED/namelist_ice_lim3_ref namelist_ice_lim3_ref
ln -s ../../SHARED/namelist_top_ref namelist_top_ref
ln -s ../../SHARED/namelist_pisces_ref namelist_pisces_ref
ln -s ../../SHARED/field_def_nemo-opa.xml field_def_nemo-opa.xml
ln -s ../../SHARED/field_def_nemo-pisces.xml field_def_nemo-pisces.xml
ln -s ../../SHARED/field_def_nemo-lim.xml field_def_nemo-lim.xml
ln -s ../../SHARED/domain_def_nemo.xml domain_def_nemo.xml
ln -s ../INPUTS INPUTS
ln -s ../FORCING FORCING
ln -s $XIOS_DIR/bin/xios_server.exe xios_server.exe
mkdir meta_out
mkdir RESTARTS
mkdir OUTPUTS

mkdir $CONFIG_DIR/INPUTS
mkdir $CONFIG_DIR/FORCING
#wget -r -nd -np -e robots=off -A '*.nc' http://gws-access.jasmin.ac.uk/public/jmmp_collab/ORCHESTRA/INPUTS/ -P $CONFIG_DIR/INPUTS/
#wget -r -nd -np -e robots=off -A '*.nc' http://gws-access.jasmin.ac.uk/public/jmmp_collab/ORCHESTRA/FORCING/ -P $CONFIG_DIR/FORCING/

cp -r $REPO_DIR/MY_SRC $CONFIG_DIR
cd $WORK_DIR/nemo

echo "Compiling nemo ORCHESTRA Config"
./makenemo -m archer -u ORCHESTRA -j 8

echo
echo "  Auto-Config: ORCHESTRA"
echo "  *****************************"
echo
echo "  To run the ORCHESTRA Configuration:"
echo
echo "  - update the runscript.pbs accordingly "
echo "      (project code, nodes, modules, etc)"
echo
echo "  - submit via the qsub command"
echo    
